name: Build and Release Azure Function

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests (if any)
      run: npm test --if-present

    - name: Create deployment package
      run: |
        # Create a temporary directory for the deployment package
        mkdir -p deployment-package
        
        # Copy function files to root level for Azure Functions
        cp -r src/functions/* deployment-package/
        
        # Copy necessary files for Azure Functions deployment
        cp package.json deployment-package/
        cp package-lock.json deployment-package/
        cp host.json deployment-package/
        
        # Create the zip file
        cd deployment-package
        zip -r ../azure-function-deployment.zip .
        cd ..
        
        # Verify the zip contents
        echo "Zip file contents:"
        unzip -l azure-function-deployment.zip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: azure-function-deployment
        path: azure-function-deployment.zip
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: azure-function-deployment

    - name: Create and push tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag build-${{ github.run_number }}
        git push origin build-${{ github.run_number }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: build-${{ github.run_number }}
        name: Build #${{ github.run_number }}
        files: azure-function-deployment.zip
        generate_release_notes: false
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update deployment template
      run: |
        # Get the latest release URL
        RELEASE_URL="https://github.com/${{ github.repository }}/releases/latest/download/azure-function-deployment.zip"
        echo "Latest release URL: $RELEASE_URL"
        
        # Update the azuredeploy.json with the new release URL
        sed -i "s|https://github.com/.*/archive/refs/heads/main.zip|$RELEASE_URL|g" azuredeploy.json
        
        # Commit the updated template
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add azuredeploy.json
        git commit -m "Update deployment template with latest release" || exit 0
        git push origin HEAD:main
